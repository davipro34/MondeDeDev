-- MySQL Script generated by MySQL Workbench
-- Thu June 7 2024
-- Version 1.3
-- Adapted and completed by David Atlan

-- Tente de supprimer l'utilisateur s'il existe
DROP USER IF EXISTS 'admin_mdd_db'@'%';

-- Crée l'utilisateur avec le nouveau mot de passe
CREATE USER 'admin_mdd_db'@'%' IDENTIFIED BY 'AChanger.34';

-- Attribue les privilèges nécessaires
GRANT ALL PRIVILEGES ON mdd_db.* TO 'admin_mdd_db'@'%';

-- Applique immédiatement les changements de privilèges
FLUSH PRIVILEGES;

-- -----------------------------------------------------
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mdd_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mdd_db` ;

-- -----------------------------------------------------
-- Schema mdd_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mdd_db` DEFAULT CHARACTER SET utf8mb4 ;
USE `mdd_db` ;

-- -----------------------------------------------------
-- Table `mdd_db`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mdd_db`.`users` ;

CREATE TABLE IF NOT EXISTS `mdd_db`.`users` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(40) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `username` (`username` ASC),
  INDEX `email` (`email` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4;

-- -----------------------------------------------------
-- Table `mdd_db`.`themes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mdd_db`.`themes` ;

CREATE TABLE IF NOT EXISTS `mdd_db`.`themes` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `description` VARCHAR(2000) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

-- -----------------------------------------------------
-- Table `mdd_db`.`subscriptions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mdd_db`.`subscriptions` ;

CREATE TABLE IF NOT EXISTS `mdd_db`.`subscriptions` (
  `user_id` BIGINT NOT NULL,
  `theme_id` BIGINT NOT NULL,
  INDEX `fk_subscriptions_1` USING BTREE (`user_id`),
  INDEX `session_id` (`theme_id` ASC),
  CONSTRAINT `fk_subscriptions_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mdd_db`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscriptions_2`
    FOREIGN KEY (`theme_id`)
    REFERENCES `mdd_db`.`themes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

-- -----------------------------------------------------
-- Table `mdd_db`.`articles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mdd_db`.`articles` ;

CREATE TABLE IF NOT EXISTS `mdd_db`.`articles` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `content` VARCHAR(2000) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` BIGINT NOT NULL,
  `theme_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_articles_1_idx` (`user_id` ASC),
  INDEX `fk_articles_2_idx` (`theme_id` ASC),
  CONSTRAINT `fk_articles_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mdd_db`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_articles_2`
    FOREIGN KEY (`theme_id`)
    REFERENCES `mdd_db`.`themes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 100
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

-- -----------------------------------------------------
-- Table `mdd_db`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mdd_db`.`comments` ;

CREATE TABLE IF NOT EXISTS `mdd_db`.`comments` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(2000) NOT NULL,
  `user_id` BIGINT NOT NULL,
  `article_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comments_1_idx` (`user_id` ASC),
  INDEX `fk_comments_2_idx` (`article_id` ASC),
  CONSTRAINT `fk_comments_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mdd_db`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comments_2`
    FOREIGN KEY (`article_id`)
    REFERENCES `mdd_db`.`articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Inserting user
-- Password is 'Password.34'
-- -----------------------------------------------------

INSERT INTO users(id, username, email, password) VALUES (1, 'admin', 'admin@mdd.com', '$2a$10$uKVjo8xcBXFKgiCPjrNTC.67620vVSOSBrj7thq/0hxHn4d6ah5ka');
INSERT INTO users(id, username, email, password) VALUES (2, 'john', 'john@mdd.com', '$2a$10$uKVjo8xcBXFKgiCPjrNTC.67620vVSOSBrj7thq/0hxHn4d6ah5ka');
INSERT INTO users(id, username, email, password) VALUES (3, 'jane', 'jane@mdd.com', '$2a$10$uKVjo8xcBXFKgiCPjrNTC.67620vVSOSBrj7thq/0hxHn4d6ah5ka');

-- -----------------------------------------------------
-- Inserting themes
-- -----------------------------------------------------

INSERT INTO themes(title, description) VALUES ('Python', 'Python is an interpreted, high-level and general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.');
INSERT INTO themes(title, description) VALUES ('React', 'React is an open-source, front-end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies.');
INSERT INTO themes(title, description) VALUES ('Angular', 'Angular is a platform for building mobile and desktop web applications. It provides a way to structure your code and make it maintainable.');
INSERT INTO themes(title, description) VALUES ('Java', 'Java is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.');
INSERT INTO themes(title, description) VALUES ('Swift', 'Swift is a powerful and intuitive programming language for macOS, iOS, watchOS, and tvOS. Writing Swift code is interactive and fun, the syntax is concise yet expressive, and Swift includes modern features developers love.');
INSERT INTO themes(title, description) VALUES ('Node.js', 'Node.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.');
INSERT INTO themes(title, description) VALUES ('ASP.NET Core', 'ASP.NET Core is a free and open-source web framework, developed by Microsoft, that runs on Windows, macOS, and Linux. It is a modular framework that runs on both the full .NET Framework, on .NET Core, and on Mono.');
INSERT INTO themes(title, description) VALUES ('Django', 'Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. It is known for its "batteries-included" philosophy.');
INSERT INTO themes(title, description) VALUES ('Spring Boot', 'Spring Boot is an open-source Java-based framework used to create a microservice. It is developed by Pivotal Team and is used to build stand-alone and production-ready spring applications.');
INSERT INTO themes(title, description) VALUES ('Express.js', 'Express.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs.');
INSERT INTO themes(title, description) VALUES ('Tailwind CSS', 'Tailwind CSS is a utility-first CSS framework for rapidly building custom user interfaces. It provides low-level utility classes that let you build completely custom designs without ever leaving your HTML.');
INSERT INTO themes(title, description) VALUES ('Bootstrap', 'Bootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains CSS- and JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.');

-- -----------------------------------------------------
-- Inserting articles
-- -----------------------------------------------------

INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (100, 'Getting Started with Python', 'Python is known for its simple syntax, readability, and versatility. It is used for web development, data analysis, artificial intelligence, scientific computing, and more.', 3, (SELECT id FROM themes WHERE title = 'Python'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (101, 'Building with React', 'React allows developers to build web applications that can update and render efficiently in response to data changes. It is component-based and uses a declarative approach.', 1, (SELECT id FROM themes WHERE title = 'React'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (102, 'Mastering Angular', 'Angular is a platform and framework for building single-page client applications using HTML and TypeScript. Angular is written in TypeScript.', 1, (SELECT id FROM themes WHERE title = 'Angular'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (103, 'Java for Beginners', 'Java is widely used for building enterprise-scale applications. It is known for its portability across platforms, thanks to the Java Virtual Machine (JVM).', 3, (SELECT id FROM themes WHERE title = 'Java'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (104, 'Introduction to Swift', 'Swift is designed to work with Apple’s Cocoa and Cocoa Touch frameworks and the large body of existing Objective-C code written for Apple products.', 1, (SELECT id FROM themes WHERE title = 'Swift'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (105, 'Node.js Basics', 'Node.js allows developers to use JavaScript to write server-side code. It is event-driven and capable of asynchronous I/O, making it efficient for scalable network applications.', 1, (SELECT id FROM themes WHERE title = 'Node.js'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (106, 'ASP.NET Core Overview', 'ASP.NET Core is a cross-platform, high-performance framework for building modern, cloud-based, Internet-connected applications. It is known for its powerful tools and robust performance.', 3, (SELECT id FROM themes WHERE title = 'ASP.NET Core'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (107, 'Web Development with Django', 'Django aims to make it easier to build web applications quickly and with less code. It includes features like authentication, a customizable admin interface, and an ORM for database manipulation.', 2, (SELECT id FROM themes WHERE title = 'Django'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (108, 'Creating Microservices with Spring Boot', 'Spring Boot simplifies the creation of production-ready applications that use the Spring Framework. It provides a range of non-functional features common to large classes of projects.', 2, (SELECT id FROM themes WHERE title = 'Spring Boot'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (109, 'Express.js for Building APIs', 'Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.', 2, (SELECT id FROM themes WHERE title = 'Express.js'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (110, 'Tailwind CSS: Utility-First Design', 'Tailwind CSS provides low-level utility classes that allow developers to build custom designs quickly without writing custom CSS. It promotes a different approach to styling by using utility classes directly in HTML.', 3, (SELECT id FROM themes WHERE title = 'Tailwind CSS'));
INSERT INTO articles(id, title, content, user_id, theme_id) VALUES (111, 'Responsive Design with Bootstrap', 'Bootstrap is a popular framework for building responsive, mobile-first websites. It includes pre-designed components and a responsive grid system that makes it easy to design web applications that look great on any device.', 2, (SELECT id FROM themes WHERE title = 'Bootstrap'));

-- -----------------------------------------------------
-- Inserting subscriptions
-- -----------------------------------------------------

INSERT INTO subscriptions(user_id, theme_id) VALUES (3, (SELECT id FROM themes WHERE title = 'Python'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (2, (SELECT id FROM themes WHERE title = 'React'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (3, (SELECT id FROM themes WHERE title = 'Angular'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (2, (SELECT id FROM themes WHERE title = 'Java'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (1, (SELECT id FROM themes WHERE title = 'Swift'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (2, (SELECT id FROM themes WHERE title = 'Node.js'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (1, (SELECT id FROM themes WHERE title = 'ASP.NET Core'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (3, (SELECT id FROM themes WHERE title = 'Django'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (1, (SELECT id FROM themes WHERE title = 'Spring Boot'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (2, (SELECT id FROM themes WHERE title = 'Express.js'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (1, (SELECT id FROM themes WHERE title = 'Tailwind CSS'));
INSERT INTO subscriptions(user_id, theme_id) VALUES (3, (SELECT id FROM themes WHERE title = 'Bootstrap'));

-- -----------------------------------------------------
-- Inserting comments
-- -----------------------------------------------------

-- Comments for 'Getting Started with Python'
INSERT INTO comments(content, user_id, article_id) VALUES ('Great introduction to Python!', 1, (SELECT id FROM articles WHERE title = 'Getting Started with Python'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Python basics are well covered.', 3, (SELECT id FROM articles WHERE title = 'Getting Started with Python'));

-- Comments for 'Building with React'
INSERT INTO comments(content, user_id, article_id) VALUES ('Very informative React article.', 2, (SELECT id FROM articles WHERE title = 'Building with React'));
INSERT INTO comments(content, user_id, article_id) VALUES ('React components explained well.', 1, (SELECT id FROM articles WHERE title = 'Building with React'));

-- Comments for 'Mastering Angular'
INSERT INTO comments(content, user_id, article_id) VALUES ('Excellent Angular guide.', 1, (SELECT id FROM articles WHERE title = 'Mastering Angular'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Angular framework details.', 2, (SELECT id FROM articles WHERE title = 'Mastering Angular'));

-- Comments for 'Java for Beginners'
INSERT INTO comments(content, user_id, article_id) VALUES ('Useful Java beginner tips.', 3, (SELECT id FROM articles WHERE title = 'Java for Beginners'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Great intro to Java programming.', 2, (SELECT id FROM articles WHERE title = 'Java for Beginners'));

-- Comments for 'Introduction to Swift'
INSERT INTO comments(content, user_id, article_id) VALUES ('Swift tutorial was helpful.', 1, (SELECT id FROM articles WHERE title = 'Introduction to Swift'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Good overview of Swift.', 2, (SELECT id FROM articles WHERE title = 'Introduction to Swift'));

-- Comments for 'Node.js Basics'
INSERT INTO comments(content, user_id, article_id) VALUES ('Node.js basics well explained.', 1, (SELECT id FROM articles WHERE title = 'Node.js Basics'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Informative Node.js guide.', 2, (SELECT id FROM articles WHERE title = 'Node.js Basics'));

-- Comments for 'ASP.NET Core Overview'
INSERT INTO comments(content, user_id, article_id) VALUES ('ASP.NET Core overview rocks.', 3, (SELECT id FROM articles WHERE title = 'ASP.NET Core Overview'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Great ASP.NET Core insights.', 3, (SELECT id FROM articles WHERE title = 'ASP.NET Core Overview'));

-- Comments for 'Web Development with Django'
INSERT INTO comments(content, user_id, article_id) VALUES ('Django web development guide.', 2, (SELECT id FROM articles WHERE title = 'Web Development with Django'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Django framework explained.', 1, (SELECT id FROM articles WHERE title = 'Web Development with Django'));

-- Comments for 'Creating Microservices with Spring Boot'
INSERT INTO comments(content, user_id, article_id) VALUES ('Spring Boot microservices.', 1, (SELECT id FROM articles WHERE title = 'Creating Microservices with Spring Boot'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Microservices with Spring Boot.', 3, (SELECT id FROM articles WHERE title = 'Creating Microservices with Spring Boot'));

-- Comments for 'Express.js for Building APIs'
INSERT INTO comments(content, user_id, article_id) VALUES ('Express.js API building.', 1, (SELECT id FROM articles WHERE title = 'Express.js for Building APIs'));
INSERT INTO comments(content, user_id, article_id) VALUES ('API creation with Express.js.', 2, (SELECT id FROM articles WHERE title = 'Express.js for Building APIs'));

-- Comments for 'Tailwind CSS: Utility-First Design'
INSERT INTO comments(content, user_id, article_id) VALUES ('Tailwind CSS design tips.', 3, (SELECT id FROM articles WHERE title = 'Tailwind CSS: Utility-First Design'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Useful Tailwind CSS guide.', 2, (SELECT id FROM articles WHERE title = 'Tailwind CSS: Utility-First Design'));

-- Comments for 'Responsive Design with Bootstrap'
INSERT INTO comments(content, user_id, article_id) VALUES ('Responsive design with Bootstrap.', 1, (SELECT id FROM articles WHERE title = 'Responsive Design with Bootstrap'));
INSERT INTO comments(content, user_id, article_id) VALUES ('Bootstrap for responsive design.', 2, (SELECT id FROM articles WHERE title = 'Responsive Design with Bootstrap'));
